[{"/Users/reyna/Desktop/botArm/botarm/src/index.js":"1","/Users/reyna/Desktop/botArm/botarm/src/App.js":"2","/Users/reyna/Desktop/botArm/botarm/src/reportWebVitals.js":"3","/Users/reyna/Desktop/ba/botarm/src/index.js":"4","/Users/reyna/Desktop/ba/botarm/src/App.js":"5","/Users/reyna/Desktop/ba/botarm/src/reportWebVitals.js":"6","/Users/reyna/Desktop/ba/botarm/src/utils/GlobalState.js":"7","/Users/reyna/Desktop/ba/botarm/src/utils/actions.js":"8","/Users/reyna/Desktop/ba/botarm/src/components/DisplaySensorState.js":"9","/Users/reyna/Desktop/ba/botarm/src/components/ReadSensorTest.js":"10","/Users/reyna/Desktop/ba/botarm/src/utils/API.js":"11","/Users/reyna/Desktop/ba/botarm/src/components/NavBar.js":"12","/Users/reyna/Desktop/ba/botarm/src/components/Footer.js":"13","/Users/reyna/Desktop/ba/botarm/src/components/SensorCard.js":"14","/Users/reyna/Desktop/ba/botarm/src/components/SensorCardContainer.js":"15","/Users/reyna/Desktop/ba/botarm/src/pages/Home.js":"16","/Users/reyna/Desktop/ba/botarm/src/pages/Login.js":"17","/Users/reyna/Desktop/ba/botarm/src/components/LoginForm.js":"18","/Users/reyna/Desktop/ba/botarm/src/pages/History.js":"19","/Users/reyna/Desktop/ba/botarm/src/pages/Signup.js":"20","/Users/reyna/Desktop/ba/botarm/src/components/SignupForm.js":"21","/Users/reyna/Desktop/ba/botarm/src/pages/SensorSetting.js":"22","/Users/reyna/Desktop/ba/botarm/src/components/SensorSettingForm.js":"23","/Users/reyna/Desktop/ba/botarm/src/components/SelectOption.js":"24","/Users/reyna/Desktop/ba/botarm/src/components/PrivateRoute.js":"25","/Users/reyna/Desktop/ba/botarm/src/utils/polling.js":"26","/Users/reyna/Desktop/ba/botarm/src/utils/smsHelper.js":"27"},{"size":500,"mtime":1607437103114,"results":"28","hashOfConfig":"29"},{"size":528,"mtime":1607437103111,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1607437103115,"results":"31","hashOfConfig":"29"},{"size":595,"mtime":1607875574890,"results":"32","hashOfConfig":"33"},{"size":4221,"mtime":1607988394172,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1607437103115,"results":"35","hashOfConfig":"33"},{"size":1765,"mtime":1607959475865,"results":"36","hashOfConfig":"33"},{"size":284,"mtime":1607921007324,"results":"37","hashOfConfig":"33"},{"size":484,"mtime":1607622327398,"results":"38","hashOfConfig":"33"},{"size":773,"mtime":1607584573980,"results":"39","hashOfConfig":"33"},{"size":703,"mtime":1607987161601,"results":"40","hashOfConfig":"33"},{"size":1636,"mtime":1607909869586,"results":"41","hashOfConfig":"33"},{"size":382,"mtime":1607743713222,"results":"42","hashOfConfig":"33"},{"size":1253,"mtime":1607959826421,"results":"43","hashOfConfig":"33"},{"size":791,"mtime":1607920457865,"results":"44","hashOfConfig":"33"},{"size":526,"mtime":1607991830363,"results":"45","hashOfConfig":"33"},{"size":360,"mtime":1607790228304,"results":"46","hashOfConfig":"33"},{"size":2970,"mtime":1607896297001,"results":"47","hashOfConfig":"33"},{"size":792,"mtime":1607991569194,"results":"48","hashOfConfig":"33"},{"size":321,"mtime":1607790364267,"results":"49","hashOfConfig":"33"},{"size":4272,"mtime":1607989576101,"results":"50","hashOfConfig":"33"},{"size":355,"mtime":1607791601244,"results":"51","hashOfConfig":"33"},{"size":6198,"mtime":1607987064875,"results":"52","hashOfConfig":"33"},{"size":341,"mtime":1607815208607,"results":"53","hashOfConfig":"33"},{"size":512,"mtime":1607987496672,"results":"54","hashOfConfig":"33"},{"size":438,"mtime":1607906644187,"results":"55","hashOfConfig":"33"},{"size":833,"mtime":1607991679878,"results":"56","hashOfConfig":"33"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"ywsx7q",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"11mbghx",{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"67"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"80"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"67"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"67"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"67"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"67"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"67"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"67"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"67"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"67"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/reyna/Desktop/botArm/botarm/src/index.js",[],["126","127"],"/Users/reyna/Desktop/botArm/botarm/src/App.js",[],"/Users/reyna/Desktop/botArm/botarm/src/reportWebVitals.js",[],["128","129"],"/Users/reyna/Desktop/ba/botarm/src/index.js",[],["130","131"],"/Users/reyna/Desktop/ba/botarm/src/App.js",["132","133","134","135","136","137"],"import React , {useEffect, useHistory} from \"react\";\n// import logo from './logo.svg';\n// import { StoreProvider } from \"./utils/GlobalState\";\n// import DisplaySensorState from \"./components/DisplaySensorState\"\nimport './App.css';\n// import ReadSensorTest from \"./components/ReadSensorTest\";\nimport NavBar from \"./components/NavBar\";\n//import './app.sass';\nimport 'bulma/css/bulma.css'\nimport Footer from \"./components/Footer\";\n// import SensorCard from \"./components/SensorCard\";\n// import SensorCardContainer from \"./components/SensorCardContainer\"; \nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport History from \"./pages/History\";\nimport Signup from \"./pages/Signup\";\nimport SensorSetting from \"./pages/SensorSetting\"; \nimport { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport { useStoreContext } from \"./utils/GlobalState\";\nimport axios from \"axios\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport startPolling from \"./utils/polling\";\nimport Pusher from 'pusher-js';\nimport API from './utils/API'; \nimport { SET_ACTUAL_SENSOR_STATUS, SET_SENSOR_CONFIGURATION } from \"./utils/actions\"\nimport smsHelper from \"./utils/smsHelper\"\n\n\n\n\n//https://pusher.com/tutorials/react-websockets\nfunction App() {\n\n  const [state, dispatch] = useStoreContext();\n  // const { push } = useHistory();\n\n  useEffect(() => {\n    checkLogin();\n    loadInitial()\n    loadInitialSensorState()\n    \n    // Enable pusher logging - don't include this in production\n     Pusher.logToConsole = false;\n\n    var pusher = new Pusher('6ef349c7143e05ce7ff2', {\n      cluster: 'us2'\n    });\n\n    var channel = pusher.subscribe('my-channel');\n    channel.bind('my-event', function (response) {\n      var sensorResponse={}; \n     if (response.hasOwnProperty(\"data\")){\n      sensorResponse = response.data\n\n     }else{\n      sensorResponse = response\n     }\n      console.log(\"-----------------------------------------------------------------------\"); \n      console.log(sensorResponse); \n      var zoneIndex = state.actualSensorState.findIndex((sensor)=>{\n        return sensor.zone == sensorResponse.zone\n      })\n      if(zoneIndex >= 0 ){\n        state.actualSensorState.splice(zoneIndex,1,sensorResponse)\n      }else{\n        state.actualSensorState.push(sensorResponse)\n      } \n      console.log(\"------------actual sensor state-----------------------\")\n      console.log(state.actualSensorState)\n      dispatch({\n        action: SET_ACTUAL_SENSOR_STATUS,\n        actualSensorState: [...state.actualSensorState]\n\n      }); \n      smsHelper(state, sensorResponse)\n    \n    });\n\n\n   // loadMessage();\n     //startPolling(state, dispatch, 30000);\n  }, [state.apiToken])\n\n  const checkLogin = () => {\n    // get the user from local storage\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    // is there a user?\n    if (user) {\n      // put that user in the state\n      dispatch({\n        action: \"LOGIN\",\n        email: user.email,\n        apiToken: user.token\n\n      });\n    }\n    //else {push(\"/login\")}\n  }\n  async function loadInitial() {\n   \n    const { data } = await API.getSensorConfig(state.email)\n    \n    if(data != null){\n    dispatch({\n      action: SET_SENSOR_CONFIGURATION,\n      sensorConfiguration: data\n\n    });\n    }\n  }\n\n  async function loadInitialSensorState() {\n    const { data } = await API.getSensor()\n    \n    if (data != null) {\n      dispatch({\n        action: SET_ACTUAL_SENSOR_STATUS,\n        actualSensorState: data\n\n      });\n    }\n  }\n\n\n  return (\n    <Router>\n    <div className=\"App\">\n     \n        <NavBar/>\n        <Switch>\n            <PrivateRoute exact path=\"/\" component={Home} />\n            <PrivateRoute exact path=\"/home\" component={Home}/>\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/settings\" component={SensorSetting} />\n            <Route exact path=\"/history\" component={History} />\n            <PrivateRoute exact path=\"/logout\" component={Login} />\n            {/* <Route component={NoMatch} /> */}\n          </Switch>\n        <Footer/>\n      \n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n      \n\n","/Users/reyna/Desktop/ba/botarm/src/reportWebVitals.js",[],"/Users/reyna/Desktop/ba/botarm/src/utils/GlobalState.js",[],"/Users/reyna/Desktop/ba/botarm/src/utils/actions.js",[],"/Users/reyna/Desktop/ba/botarm/src/components/DisplaySensorState.js",["138","139","140"],"import React from \"react\"; \nimport { useStoreContext } from \"../utils/GlobalState\";\n\n\nfunction DisplaySensorState (){\n    const [state, dispatch] = useStoreContext();\n    const statusColor = state.sensorStatus == 0 ? { color: \"purple\" } : { color: \"red\" }\n    var status = state.sensorStatus == 0 ? \"Closed\":\"Open\"; \n    return (\n        <div> \n            <span style={statusColor} >The door is currently : {status} </span>\n        </div>\n    )\n}\n\nexport default DisplaySensorState; ",["141","142"],"/Users/reyna/Desktop/ba/botarm/src/components/ReadSensorTest.js",["143","144"],"import React from \"react\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport API from \"../utils/API\"\nimport { READ_SENSOR, SET_SENSOR_DATA } from \"../utils/actions\";\n\nfunction ReadSensorTest(){\n    const [state, dispatch] = useStoreContext();\n    const handleOnClick = async ()=>  {\n        // console.log(\"probando on click\")\n        const results = await API.getSensor()\n        console.log(results);\n         dispatch({\n             action: SET_SENSOR_DATA,\n             sensorStatus: results.data[0].state\n        });\n\n    }\n    return(\n        <div style= {{margin:\"25px\"}}>\n        <button className=\"btn btn-success mt-3 mb-5\" onClick= {handleOnClick}>\n            Read Sensor State\n        </button>\n        </div>\n    )\n}\nexport default ReadSensorTest","/Users/reyna/Desktop/ba/botarm/src/utils/API.js",["145"],"import axios from \"axios\";\n\nexport default {\n\n    // Gets all posts\n    getSensor: function () {\n        return axios.get(\"http://23.121.17.11:9123/zone\");\n    },\n    // Create Sensor Settings\n    createSettings: function(Settings){\n        return axios.post(\"/api/sensors/\",Settings)\n    },\n    getSensorConfig: function (email){\n        console.log(email)\n        return axios.post(\"/api/sensors/one\", {email:email})\n    },\n    sendSms: function(data){\n        return axios.post(\"/api/sms\", data)\n    }, \n    saveEvent: function(data){\n        return axios.post(\"/api/sensors/save\", data)\n    }, \n    getHistory: function (email) {\n        return axios.post(\"/api/sensors/history\", email)\n    }\n\n\n\n};\n","/Users/reyna/Desktop/ba/botarm/src/components/NavBar.js",["146","147"],"import React from \"react\";\n\n\nfunction NavBar (){\n    return (\n        <nav className=\"navbar is-success\" role=\"navigation\" aria-label=\"main navigation\" >\n            <div className=\"navbar-brand\">\n                <a className=\"navbar-item\" href=\"/\">\n                    <img src=\"botArm.png\"  alt=\"logo\"/>\n                </a>\n\n                    <a role=\"button\" className=\"navbar-burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\n                        <span aria-hidden=\"true\"></span>\n                        <span aria-hidden=\"true\"></span>\n                        <span aria-hidden=\"true\"></span>\n                    </a>\n                </div>\n\n            <div className=\"navbar-end\">\n                <div className=\"navbar-item\">\n                    \n                    <div className=\"navbar-item has-dropdown is-hoverable\">\n                        <a className=\"navbar-link\">\n                            RG\n                        </a>\n                        <div className=\"navbar-dropdown\">\n                            \n                            <a className=\"navbar-item\" href=\"/history\">\n                                History\n          </a>\n                            <a className=\"navbar-item\" href=\"/settings\">\n                                Sensor Settings\n          </a>\n                            <a className=\"navbar-item\" href=\"/logout\">\n                                Logout\n          </a>\n          </div>\n                    </div>\n\n\n                </div>\n                \n            </div>\n  \n        </nav>\n        \n        \n    )\n   \n   } \n\n\nexport default NavBar","/Users/reyna/Desktop/ba/botarm/src/components/Footer.js",[],"/Users/reyna/Desktop/ba/botarm/src/components/SensorCard.js",["148","149","150","151","152","153"],"import React from \"react\"; \nimport { useStoreContext } from \"../utils/GlobalState\";\n\nfunction SensorCard(props){\n  \n\n  const [state, dispatch] = useStoreContext();\n  function isOpenOrClose(){ \n    var sensorStatus = state.actualSensorState.find((sensor)=>{\n      return sensor.zone == props.config.zoneNumber\n    })\n    if(sensorStatus == undefined){\n      return \"Unknown\"\n    }\n    if(sensorStatus.state==0){\n      return \" Closed \"\n    }else return \" Open \"\n\n  }\n\n    return(\n\n    <div className=\"card\">\n  <div className=\"card-image\">\n                <figure className=\"image is-3by2\">\n      <img src=\"door.jpeg\" alt=\"livingRoom\"/>\n    </figure>\n  </div>\n  <div className=\"card-content\">\n    <div className=\"media\">\n      <div className=\"media-left\">\n        \n      </div>\n      <div className=\"media-content\">\n    <p className=\"title is-4\">{props.config.zoneName}</p>\n      </div>\n    </div>\n\n    <div className=\"content\">\n           {isOpenOrClose()}\n      <br/>\n     \n    </div>\n  </div>\n            <footer className=\"card-footer\">\n                \n                <a href=\"#\" className=\"card-footer-item\">Edit</a>\n                <a href=\"#\" className=\"card-footer-item\">Remove</a>\n            </footer>\n</div>\n    )\n}\n\nexport default SensorCard","/Users/reyna/Desktop/ba/botarm/src/components/SensorCardContainer.js",["154","155"],"import React from \"react\"\nimport SensorCard from \"./SensorCard\"\nimport { useStoreContext } from \"../utils/GlobalState\"\n\nfunction SensorCardContainer(){\n    const [state, dispatch] = useStoreContext();\n    console.log(state)\n    const sensorsCard = state.sensorConfiguration.sensorStateConfig.map((sensor)=>{\n        return (<div className=\"column\">\n    \n            <SensorCard config= {sensor}/>\n\n        </div>)\n        \n\n    })\n    return(\n        <div>\n        \n        <div className=\"columns\">\n\n            {state.sensorConfiguration.sensorStateConfig.length == 0 ? <h3>Please Go to Sensor Settings</h3>\n            :sensorsCard} \n            \n\n               \n                \n        </div>\n\n        \n        </div>\n\n\n\n\n\n    )\n}\nexport default SensorCardContainer; \n\n\n          \n    ","/Users/reyna/Desktop/ba/botarm/src/pages/Home.js",["156","157","158","159","160"],"/Users/reyna/Desktop/ba/botarm/src/pages/Login.js",[],"/Users/reyna/Desktop/ba/botarm/src/components/LoginForm.js",["161"],"import React,{useRef} from \"react\"; \nimport { useHistory } from 'react-router'\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport { LOGIN } from \"../utils/actions\";\n\n//https://reactrouter.com/web/example/auth-workflow\n\n\nimport axios from \"axios\";\n\nfunction LoginForm (){\n    const { push } = useHistory();\n   \n    const emailRef = useRef();\n    const passwordRef = useRef();\n\n    const [state, dispatch] = useStoreContext();\n\n\nconst handleLogin = async (e)=>{\n\n\n    const creds = {\n        email: emailRef.current.value,\n        password: passwordRef.current.value\n    }\n    // do the login with the api\n    const { data } = await axios.post(\"/auth/login\", creds);\n    // put the email and token in the state\n    const { email, token } = data;\n    const apiToken = token;\n    console.log(apiToken);\n    dispatch({\n        action: LOGIN,\n        email,\n        apiToken: data.token\n    });\n     localStorage.setItem(\"user\", JSON.stringify({ email, token }));\n     push(\"/home\")\n}\n\n    return(\n\n        <div>\n            <div class=\"card\">\n                <div class=\"card-content\">\n\n            <div className=\"field\">\n                <label className=\"label\">Email</label>\n                <div className=\"control has-icons-left has-icons-right\">\n                    <input className=\"input is-success\" type=\"email\" placeholder=\"Email input\"  ref={emailRef}/>\n                    <span className=\"icon is-small is-left\">\n                        <i className=\"fas fa-envelope\"></i>\n                    </span>\n                    <span className=\"icon is-small is-right\">\n                        <i className=\"fas fa-exclamation-triangle\"></i>\n                    </span>\n                </div>\n                \n            </div>\n            \n\n                <div className=\"field\">\n                    <label className=\"label\">Password</label>\n                    <div className=\"control has-icons-left has-icons-right\">\n                    <input className=\"input is-success\" type=\"password\" placeholder=\"password\" ref={passwordRef} />\n                        <span className=\"icon is-small is-left\">\n                            <i className=\"fas fa-envelope\"></i>\n                        </span>\n                        <span className=\"icon is-small is-right\">\n                            <i className=\"fas fa-exclamation-triangle\"></i>\n                        </span>\n                    </div>\n\n                </div>\n           \n                    <div className=\"field is-grouped\" >\n                        <div className=\"control\">\n                    <button className=\"button is-link\" onClick={handleLogin}>Login</button>\n                </div>\n                <div className=\"control\">\n                            <button className=\"button is-link is-light\" onClick={() => push('/signup')}>Sign Up Here!</button>\n                </div>\n            </div>\n            </div>\n            </div>\n        </div>\n\n    )\n}\nexport default LoginForm; \n\n","/Users/reyna/Desktop/ba/botarm/src/pages/History.js",["162"],"/Users/reyna/Desktop/ba/botarm/src/pages/Signup.js",[],"/Users/reyna/Desktop/ba/botarm/src/components/SignupForm.js",["163"],"/Users/reyna/Desktop/ba/botarm/src/pages/SensorSetting.js",[],"/Users/reyna/Desktop/ba/botarm/src/components/SensorSettingForm.js",["164","165","166"],"\nimport React, {useRef, useState} from \"react\"; \nimport SelectOption from \"../components/SelectOption\"\nimport API from \"../utils/API\"\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport { SET_SENSOR_CONFIGURATION} from \"../utils/actions\"\n\nconst zones = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n\n\n\nfunction SensorSettingForm (){\n\n    const konnectedURL = useRef()\n    const contactPhone = useRef()\n    const selectZone= useRef()\n    const zoneName= useRef()\n    const [sensorStateConfig, setSensorConfig] = useState([]);\n    const [zonesState, setZonesState] = useState(zones);\n\n    const [state, dispatch] = useStoreContext();\n    const saveHandle = async ()=>{\n        const settings = {\n            url: konnectedURL.current.value,\n            contactPhone: contactPhone.current.value,\n            sensorStateConfig: sensorStateConfig,\n            email: state.email, \n\n        }\n        console.log(settings)\n        const {data} = await API.createSettings(settings)\n        console.log(data)\n        dispatch({\n            action: SET_SENSOR_CONFIGURATION,\n            sensorConfiguration: data\n            \n        });\n        console.log(state)\n    }\n\n    const addSensorHandle = ()=>{\n        const sensorInfo = {\n            zoneName: zoneName.current.value, \n            zoneNumber: selectZone.current.value\n            \n        }\n       sensorStateConfig.push(sensorInfo);\n        let y = sensorStateConfig.map(x => x);\n       setSensorConfig(y)\n       \n    \n\n        const zoneOptFilter = zonesState.filter((zone) => {\n            const isInState = y.find((sensorInfo) => {\n                return sensorInfo.zoneNumber == zone\n\n\n            })\n            \n            return isInState == undefined\n        })\n\n        setZonesState(zoneOptFilter)\n      \n    }\n\n    return (\n         <div>\n            <div class=\"card\">\n                <div class=\"card-content\">\n\n                    <div className=\"field\">\n                        <label className=\"label\">Konnected Device URL</label>\n                        <div className=\"control has-icons-left has-icons-right\">\n                            <input ref={konnectedURL} className=\"input is-success\" type=\"text\" placeholder=\"Konnected URL\"  />\n                            <span className=\"icon is-small is-left\">\n                                <i className=\"fas fa-envelope\"></i>\n                            </span>\n                            <span className=\"icon is-small is-right\">\n                                <i className=\"fas fa-exclamation-triangle\"></i>\n                            </span>\n                        </div>\n\n                    </div>\n                    <div className=\"field\">\n                        <label className=\"label\">Contact Phone Number</label>\n                        <div className=\"control \">\n                            <input ref={contactPhone} className=\"input is-success\" type=\"tel\" placeholder=\" My Contact Number\"  />\n                            <span className=\"icon is-small is-left\">\n                                <i className=\"fas fa-envelope\"></i>\n                            </span>\n                            <span className=\"icon is-small is-right\">\n                                <i className=\"fas fa-exclamation-triangle\"></i>\n                            </span>\n                        </div>\n\n                    </div>\n\n                    <div class=\"card\">\n                        <div class=\"card-content\">\n\n                        \n                                <div class=\"field\">\n                                    <div class=\"control\">\n                                        <div class=\"select is-primary\">\n                                            <select ref= {selectZone}>\n                                                {zonesState.map((zone)=>{\n                                                    \n                                                    return (<option  value={zone}>Zone: {zone} </option>)\n\n                                                })}\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            <div className=\"field\">\n                                <label className=\"label\">Enter Zone Name</label>\n                                <div className=\"control has-icons-left has-icons-right\">\n                                    <input ref={zoneName}className=\"input is-success\" type=\"text\" placeholder=\"Zone Name\"  />\n                                    <span className=\"icon is-small is-left\">\n                                        <i className=\"fas fa-envelope\"></i>\n                                    </span>\n                                    <span className=\"icon is-small is-right\">\n                                        <i className=\"fas fa-exclamation-triangle\"></i>\n                                    </span>\n                                </div>\n\n                            </div>\n\n                            <div className=\"control my-2 \">\n                                <button className=\"button is-link is-light \" onClick={addSensorHandle}>Add Sensor Zone</button>\n                            </div>\n\n    \n\n                            </div>\n                    </div>\n\n                        <div className= \"my-6\">\n                            \n                            <h3> Defined Zones</h3>\n                        \n\n                            {sensorStateConfig.map((x)=>{\n                                \n                                return( \n                                <div>\n                                <h6>Zone  { x.zoneNumber } = {x.zoneName} </h6>\n                                \n                                </div> )\n                            })}\n                        </div>\n                    \n                        <div className=\"control mt-4 \">\n                            <button className=\"button is-link is-light \" onClick={saveHandle}>Save</button>\n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default SensorSettingForm","/Users/reyna/Desktop/ba/botarm/src/components/SelectOption.js",[],"/Users/reyna/Desktop/ba/botarm/src/components/PrivateRoute.js",["167","168"],"import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Redirect,\n} from \"react-router-dom\";\n\n\nimport { useStoreContext } from \"../utils/GlobalState\";\nfunction PrivateRoute({ children, ...rest }) {\n    const [state, dispatch] = useStoreContext();\n    console.log(rest)\n    console.log(state)\n\n\n    return (\n        <Route>\n            {state.apiToken ? (\n              <rest.component />  \n            ) : <Redirect to=\"/login\" />} \n        </Route>\n    );\n}\nexport default PrivateRoute; ","/Users/reyna/Desktop/ba/botarm/src/utils/polling.js",["169","170","171"],"import axios from \"axios\";\nimport API from \"./API\"\n\n\n\nfunction startPolling (state, dispatch,time){\n\n    async function axiosCall() {\n        try{\n            const { data } = await API.getSensor()\n            console.log(data); \n        }catch(errr){\n            console.log(errr)\n        }\n        \n        var id = setTimeout(axiosCall, time)\n        \n    }\n    \n    var id = setTimeout(axiosCall, time)\n\n}\n\nexport default startPolling","/Users/reyna/Desktop/ba/botarm/src/utils/smsHelper.js",["172","173"],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"174","replacedBy":"178"},{"ruleId":"176","replacedBy":"179"},{"ruleId":"174","replacedBy":"180"},{"ruleId":"176","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":1,"column":28,"nodeType":"184","messageId":"185","endLine":1,"endColumn":38},{"ruleId":"182","severity":1,"message":"186","line":18,"column":35,"nodeType":"184","messageId":"185","endLine":18,"endColumn":43},{"ruleId":"182","severity":1,"message":"187","line":20,"column":8,"nodeType":"184","messageId":"185","endLine":20,"endColumn":13},{"ruleId":"182","severity":1,"message":"188","line":22,"column":8,"nodeType":"184","messageId":"185","endLine":22,"endColumn":20},{"ruleId":"189","severity":1,"message":"190","line":61,"column":28,"nodeType":"191","messageId":"192","endLine":61,"endColumn":30},{"ruleId":"193","severity":1,"message":"194","line":82,"column":6,"nodeType":"195","endLine":82,"endColumn":22,"suggestions":"196"},{"ruleId":"182","severity":1,"message":"197","line":6,"column":19,"nodeType":"184","messageId":"185","endLine":6,"endColumn":27},{"ruleId":"189","severity":1,"message":"190","line":7,"column":44,"nodeType":"191","messageId":"192","endLine":7,"endColumn":46},{"ruleId":"189","severity":1,"message":"190","line":8,"column":37,"nodeType":"191","messageId":"192","endLine":8,"endColumn":39},{"ruleId":"174","replacedBy":"198"},{"ruleId":"176","replacedBy":"199"},{"ruleId":"182","severity":1,"message":"200","line":4,"column":10,"nodeType":"184","messageId":"185","endLine":4,"endColumn":21},{"ruleId":"182","severity":1,"message":"201","line":7,"column":12,"nodeType":"184","messageId":"185","endLine":7,"endColumn":17},{"ruleId":"202","severity":1,"message":"203","line":3,"column":1,"nodeType":"204","endLine":29,"endColumn":3},{"ruleId":"205","severity":1,"message":"206","line":12,"column":21,"nodeType":"207","endLine":12,"endColumn":137},{"ruleId":"205","severity":1,"message":"206","line":23,"column":25,"nodeType":"207","endLine":23,"endColumn":52},{"ruleId":"182","severity":1,"message":"197","line":7,"column":17,"nodeType":"184","messageId":"185","endLine":7,"endColumn":25},{"ruleId":"189","severity":1,"message":"190","line":10,"column":26,"nodeType":"191","messageId":"192","endLine":10,"endColumn":28},{"ruleId":"189","severity":1,"message":"190","line":12,"column":21,"nodeType":"191","messageId":"192","endLine":12,"endColumn":23},{"ruleId":"189","severity":1,"message":"190","line":15,"column":26,"nodeType":"191","messageId":"192","endLine":15,"endColumn":28},{"ruleId":"205","severity":1,"message":"208","line":47,"column":17,"nodeType":"207","endLine":47,"endColumn":58},{"ruleId":"205","severity":1,"message":"208","line":48,"column":17,"nodeType":"207","endLine":48,"endColumn":58},{"ruleId":"182","severity":1,"message":"197","line":6,"column":19,"nodeType":"184","messageId":"185","endLine":6,"endColumn":27},{"ruleId":"189","severity":1,"message":"190","line":22,"column":65,"nodeType":"191","messageId":"192","endLine":22,"endColumn":67},{"ruleId":"182","severity":1,"message":"209","line":1,"column":15,"nodeType":"184","messageId":"185","endLine":1,"endColumn":24},{"ruleId":"182","severity":1,"message":"210","line":4,"column":8,"nodeType":"184","messageId":"185","endLine":4,"endColumn":11},{"ruleId":"182","severity":1,"message":"211","line":5,"column":10,"nodeType":"184","messageId":"185","endLine":5,"endColumn":34},{"ruleId":"182","severity":1,"message":"201","line":9,"column":12,"nodeType":"184","messageId":"185","endLine":9,"endColumn":17},{"ruleId":"182","severity":1,"message":"197","line":9,"column":19,"nodeType":"184","messageId":"185","endLine":9,"endColumn":27},{"ruleId":"182","severity":1,"message":"201","line":17,"column":12,"nodeType":"184","messageId":"185","endLine":17,"endColumn":17},{"ruleId":"182","severity":1,"message":"197","line":8,"column":19,"nodeType":"184","messageId":"185","endLine":8,"endColumn":27},{"ruleId":"182","severity":1,"message":"212","line":22,"column":17,"nodeType":"184","messageId":"185","endLine":22,"endColumn":21},{"ruleId":"182","severity":1,"message":"213","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":20},{"ruleId":"189","severity":1,"message":"190","line":55,"column":46,"nodeType":"191","messageId":"192","endLine":55,"endColumn":48},{"ruleId":"189","severity":1,"message":"190","line":60,"column":30,"nodeType":"191","messageId":"192","endLine":60,"endColumn":32},{"ruleId":"182","severity":1,"message":"214","line":3,"column":22,"nodeType":"184","messageId":"185","endLine":3,"endColumn":28},{"ruleId":"182","severity":1,"message":"197","line":11,"column":19,"nodeType":"184","messageId":"185","endLine":11,"endColumn":27},{"ruleId":"182","severity":1,"message":"187","line":1,"column":8,"nodeType":"184","messageId":"185","endLine":1,"endColumn":13},{"ruleId":"182","severity":1,"message":"215","line":16,"column":13,"nodeType":"184","messageId":"185","endLine":16,"endColumn":15},{"ruleId":"182","severity":1,"message":"215","line":20,"column":9,"nodeType":"184","messageId":"185","endLine":20,"endColumn":11},{"ruleId":"189","severity":1,"message":"190","line":6,"column":47,"nodeType":"191","messageId":"192","endLine":6,"endColumn":49},{"ruleId":"189","severity":1,"message":"190","line":8,"column":33,"nodeType":"191","messageId":"192","endLine":8,"endColumn":35},"no-native-reassign",["216"],"no-negated-in-lhs",["217"],["216"],["217"],["216"],["217"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'axios' is defined but never used.","'startPolling' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkLogin', 'dispatch', 'loadInitial', 'loadInitialSensorState', and 'state'. Either include them or remove the dependency array.","ArrayExpression",["218"],"'dispatch' is assigned a value but never used.",["216"],["217"],"'READ_SENSOR' is defined but never used.","'state' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","'API' is defined but never used.","'SET_SENSOR_CONFIGURATION' is defined but never used.","'data' is assigned a value but never used.","'SelectOption' is defined but never used.","'Router' is defined but never used.","'id' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},"Update the dependencies array to be: [checkLogin, dispatch, loadInitial, loadInitialSensorState, state, state.apiToken]",{"range":"221","text":"222"},[2693,2709],"[checkLogin, dispatch, loadInitial, loadInitialSensorState, state, state.apiToken]"]